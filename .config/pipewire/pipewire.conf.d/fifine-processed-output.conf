# This makes my fifine mic sound quite damn good
context.modules = [
{   name = libpipewire-module-filter-chain
    args = {
        node.description = "Fifine Processed Output"
        media.name = "Fifine Processed Output"
        filter.graph = {
            nodes = [
                {
                    type = ladspa
                    name = compressor
                    plugin = sc4_1882
                    label = sc4
                    control = {
                        # Range: 0-1
                        # 0 = Peak detection (more responsive, might be 'jumpy')
                        # 1 = RMS detection (smoother, averages the signal)
                        "RMS/peak" = 1

                        # Range: 1.5-400ms
                        # How quickly compression kicks in when volume increases
                        # Lower = faster response but might sound unnatural
                        # 2-10ms: Fast, good for controlling peaks
                        # 10-30ms: Natural for voice
                        # >30ms: Slower, more transparent but might miss quick peaks
                        "Attack time (ms)" = 30

                        # Range: 2-800ms
                        # How quickly compression lets go when volume decreases
                        # 50-100ms: Fast, might sound pumpy
                        # 100-200ms: Good for voice
                        # 200-400ms: More natural, less noticeable
                        "Release time (ms)" = 250

                        # Range: -30 to 0
                        # Volume level where compression starts
                        # -30: Very sensitive, compresses almost everything
                        # -20 to -25: Good for voice with noise
                        # -15 to -20: Moderate compression
                        # > -15: Light compression
                        "Threshold level (dB)" = -12

                        # Range: 1-20
                        # How much compression is applied
                        # 1: No compression
                        # 2-3: Light compression
                        # 4-6: Moderate compression (good for voice)
                        # 8-20: Heavy compression (can sound unnatural)
                        "Ratio (1:n)" = 4

                        # Range: 1-10
                        # How smooth the transition into compression is
                        # 1-2: Sharp transition
                        # 3-5: Natural transition
                        # 6-10: Very smooth transition
                        "Knee radius (dB)" = 5

                        # Range: 0-24
                        # Boost applied to compensate for volume reduction
                        # Should roughly match how much you're reducing the signal
                        # Start with about half your threshold value
                        "Makeup gain (dB)" = 4
                    }
                }
                {
                    type = ladspa
                    name = highpass_left
                    plugin = filter
                    label = hpf
                    control = {
                        # The HPF cuts off frequencies below the specified value. For voice:
                        # - 80Hz: Minimal filtering, preserves deep voices but might let through too much hum
                        # - 100-120Hz: Good starting point, cuts most mechanical noise while preserving natural voice
                        # - 150Hz: Stronger filtering, still safe for voice
                        # - 200Hz: Getting aggressive, might start thinning out male voices
                        # - 300Hz: Very aggressive, will make voice sound thinner/tinnier
                        # - Above 300Hz: Not recommended for voice, will significantly impact quality
                        "Cutoff Frequency (Hz)" = 110
                    }
                }
                {
                    type = ladspa
                    name = highpass_right
                    plugin = filter
                    label = hpf
                    control = {
                        # The HPF cuts off frequencies below the specified value. For voice:
                        # - 80Hz: Minimal filtering, preserves deep voices but might let through too much hum
                        # - 100-120Hz: Good starting point, cuts most mechanical noise while preserving natural voice
                        # - 150Hz: Stronger filtering, still safe for voice
                        # - 200Hz: Getting aggressive, might start thinning out male voices
                        # - 300Hz: Very aggressive, will make voice sound thinner/tinnier
                        # - Above 300Hz: Not recommended for voice, will significantly impact quality
                        "Cutoff Frequency (Hz)" = 110
                    }
                }
                {
                    type = ladspa
                    name = rnnoise
                    plugin = librnnoise_ladspa
                    label = noise_suppressor_stereo
                    control = {
                        # Voice Activity Detection threshold
                        # Lower = more sensitive to voice (might let more noise through)
                        # Higher = stricter (might cut off quiet speech)
                        # 45-50 is a good starting point
                        "VAD Threshold (%)" = 0

                        # How long to keep processing after voice stops
                        # Lower = faster cutoff (might sound choppy)
                        # Higher = smoother transitions but might let through more noise
                        # 400-500ms is natural for speech
                        "VAD Grace Period (ms)" = 1000

                        # How far back to preserve audio when voice is detected
                        # Helps prevent cutting off the start of words
                        # 100ms is usually sufficient
                        "Retroactive VAD Grace (ms)" = 0
                    }
                }
                {
                    type = ladspa
                    name = limiter
                    plugin = fast_lookahead_limiter_1913
                    label = fastLookaheadLimiter
                    control = {
                        "Input gain (dB)" = 9
                        # Boost/cut before limiting
                        # Keep at 0 unless you need more volume

                        "Limit (dB)" = -3
                        # Absolute ceiling for output
                        # -3 is safe for most platforms
                        # Lower = more safety but might affect dynamics

                        "Release time (s)" = 0.4
                        # How fast limiter recovers
                        # 0.3s is natural for voice
                        # Lower = faster recovery but might pump
                        # Higher = smoother but might duck too long
                    }
                }
            ]

            inputs = [ "highpass_left:Input" "highpass_right:Input" ]
            outputs = [ "limiter:Output 1" "limiter:Output 2" ]
            links = [
                { output = "highpass_left:Output"    input = "rnnoise:Input (L)" }
                { output = "highpass_right:Output"   input = "rnnoise:Input (R)" }
                { output = "rnnoise:Output (L)"      input = "compressor:Left input" }
                { output = "rnnoise:Output (R)"      input = "compressor:Right input" }
                { output = "compressor:Left output"  input = "limiter:Input 1" }
                { output = "compressor:Right output" input = "limiter:Input 2" }
            ]
        }
        capture.props = {
            node.name = "capture.test_effects"
            node.passive = true
            audio.position = [ FL FR ]
            node.target = "alsa_input.usb-3142_fifine_Microphone-00.analog-stereo"
        }
        playback.props = {
            node.name = "test_effects_output"
            media.class = Audio/Source
            audio.position = [ FL FR ]
        }
    }
}
]
