# This makes my fifine mic sound quite damn good
context.modules = [
{   name = libpipewire-module-filter-chain
    args = {
        node.description = "Fifine Processed Output"
        media.name = "Fifine Processed Output"
        filter.graph = {
            nodes = [
                {
                    type = ladspa
                    name = rnnoise
                    plugin = librnnoise_ladspa
                    label = noise_suppressor_stereo
                    control = {
                        # Voice Activity Detection threshold
                        # Lower = more sensitive to voice (might let more noise through)
                        # Higher = stricter (might cut off quiet speech)
                        "VAD Threshold (%)" = 0

                        # How long to keep processing after voice stops
                        # Lower = faster cutoff (might sound choppy)
                        # Higher = smoother transitions but might let through more noise
                        "VAD Grace Period (ms)" = 1000

                        # How far back to preserve audio when voice is detected
                        # Helps prevent cutting off the start of words
                        # 100ms is usually sufficient
                        "Retroactive VAD Grace (ms)" = 0
                    }
                }
            ]

            inputs = [ "rnnoise:Input (L)" "rnnoise:Input (R)" ]
            outputs = [ "rnnoise:Output (L)" "rnnoise:Output (R)" ]

            # inputs = [ "highpass_left:Input" "highpass_right:Input" ]
            # outputs = [ "limiter:Output 1" "limiter:Output 2" ]
            # links = [
            #     { output = "highpass_left:Output"    input = "rnnoise:Input (L)" }
            #     { output = "highpass_right:Output"   input = "rnnoise:Input (R)" }
            #     { output = "rnnoise:Output (L)"      input = "compressor:Left input" }
            #     { output = "rnnoise:Output (R)"      input = "compressor:Right input" }
            #     { output = "compressor:Left output"  input = "limiter:Input 1" }
            #     { output = "compressor:Right output" input = "limiter:Input 2" }
            # ]
        }
        capture.props = {
            node.name = "capture.test_effects"
            node.passive = true
            audio.position = [ FL FR ]
            node.target = "alsa_output.usb-3142_fifine_Microphone-00.analog-stereo"
        }
        playback.props = {
            node.name = "test_effects_output"
            media.class = Audio/Source
            audio.position = [ FL FR ]
        }
    }
}
]
